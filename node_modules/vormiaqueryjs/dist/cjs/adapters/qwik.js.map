{"version":3,"file":"qwik.js","sources":["../../../src/adapters/qwik/useVormia.js"],"sourcesContent":["import { useSignal, useTask$ } from \"@builder.io/qwik\";\nimport { getGlobalVormiaClient, VormiaError } from \"../../core/VormiaClient\";\n\nexport function useVormiaQuery(options) {\n  const client = getGlobalVormiaClient();\n  const data = useSignal(null);\n  const error = useSignal(null);\n  const isLoading = useSignal(false);\n  const isError = useSignal(false);\n  const isSuccess = useSignal(false);\n\n  const fetchData = async (opts = {}) => {\n    const mergedOptions = { ...options, ...opts };\n    const {\n      endpoint,\n      method = \"GET\",\n      params,\n      data: bodyData,\n      headers,\n      transform,\n      onSuccess,\n      onError,\n    } = mergedOptions;\n\n    isLoading.value = true;\n    isError.value = false;\n    isSuccess.value = false;\n\n    try {\n      const config = {\n        method,\n        url: endpoint,\n        params: method === \"GET\" ? params : undefined,\n        data: method !== \"GET\" ? bodyData || params : undefined,\n        headers,\n      };\n\n      const response = await client.request(config);\n      let result = response.data;\n\n      if (transform && result?.response) {\n        result.response = transform(result.response);\n      }\n\n      data.value = result.response;\n      isSuccess.value = true;\n\n      if (onSuccess) {\n        onSuccess(result);\n      }\n\n      return result;\n    } catch (err) {\n      const vormiaError =\n        err instanceof VormiaError\n          ? err\n          : new VormiaError(\n              err?.message || \"An unknown error occurred\",\n              err?.response?.status\n            );\n\n      error.value = vormiaError;\n      isError.value = true;\n\n      if (onError) {\n        onError(vormiaError);\n      }\n\n      throw vormiaError;\n    } finally {\n      isLoading.value = false;\n    }\n  };\n\n  // Auto-fetch if enabled\n  useTask$(async () => {\n    if (options.enabled !== false) {\n      await fetchData();\n    }\n  });\n\n  return {\n    data,\n    error,\n    isLoading,\n    isError,\n    isSuccess,\n    fetch: fetchData,\n    refetch: fetchData,\n  };\n}\n\nexport function useVormiaMutation(options = {}) {\n  const client = getGlobalVormiaClient();\n  const data = useSignal(null);\n  const error = useSignal(null);\n  const isLoading = useSignal(false);\n  const isError = useSignal(false);\n  const isSuccess = useSignal(false);\n\n  const mutate = async (endpoint, values, method = \"POST\", config = {}) => {\n    isLoading.value = true;\n    isError.value = false;\n    isSuccess.value = false;\n\n    try {\n      const response = await client.request({\n        method,\n        url: endpoint,\n        data: values,\n        ...config,\n      });\n\n      data.value = response.data;\n      isSuccess.value = true;\n\n      if (options.onSuccess) {\n        options.onSuccess(response.data);\n      }\n\n      return response.data;\n    } catch (err) {\n      const vormiaError =\n        err instanceof VormiaError\n          ? err\n          : new VormiaError(\n              err?.message || \"An unknown error occurred\",\n              err?.response?.status\n            );\n\n      error.value = vormiaError;\n      isError.value = true;\n\n      if (options.onError) {\n        options.onError(vormiaError);\n      }\n\n      throw vormiaError;\n    } finally {\n      isLoading.value = false;\n    }\n  };\n\n  return {\n    data,\n    error,\n    isLoading,\n    isError,\n    isSuccess,\n    mutate,\n  };\n}\n"],"names":["options","client","getGlobalVormiaClient","data","useSignal","error","isLoading","isError","isSuccess","mutate","async","endpoint","values","method","config","value","response","request","url","onSuccess","err","vormiaError","VormiaError","message","_a","status","onError","fetchData","opts","mergedOptions","params","bodyData","headers","transform","result","useTask$","enabled","fetch","refetch"],"mappings":"mLA4FO,SAA2BA,EAAU,IAC1C,MAAMC,EAASC,EAAAA,wBACTC,EAAOC,EAAAA,UAAU,MACjBC,EAAQD,EAAAA,UAAU,MAClBE,EAAYF,EAAAA,WAAU,GACtBG,EAAUH,EAAAA,WAAU,GACpBI,EAAYJ,EAAAA,WAAU,GA6C5B,MAAO,CACLD,OACAE,QACAC,YACAC,UACAC,YACAC,OAjDaC,MAAOC,EAAUC,EAAQC,EAAS,OAAQC,EAAS,YAChER,EAAUS,OAAQ,EAClBR,EAAQQ,OAAQ,EAChBP,EAAUO,OAAQ,EAElB,IACE,MAAMC,QAAiBf,EAAOgB,QAAQ,CACpCJ,SACAK,IAAKP,EACLR,KAAMS,KACHE,IAUL,OAPAX,EAAKY,MAAQC,EAASb,KACtBK,EAAUO,OAAQ,EAEdf,EAAQmB,WACVnB,EAAQmB,UAAUH,EAASb,MAGtBa,EAASb,IACtB,OAAaiB,GACP,MAAMC,EACJD,aAAeE,EAAAA,YACXF,EACA,IAAIE,EAAAA,mBACFF,WAAKG,UAAW,4BAChB,OAAAC,EAAA,MAAAJ,OAAA,EAAAA,EAAKJ,eAAL,EAAAQ,EAAeC,QAUvB,MAPApB,EAAMU,MAAQM,EACdd,EAAQQ,OAAQ,EAEZf,EAAQ0B,SACV1B,EAAQ0B,QAAQL,GAGZA,CACZ,CAAA,QACMf,EAAUS,OAAQ,CACxB,GAWA,yBApJO,SAAwBf,GAC7B,MAAMC,EAASC,EAAAA,wBACTC,EAAOC,EAAAA,UAAU,MACjBC,EAAQD,EAAAA,UAAU,MAClBE,EAAYF,EAAAA,WAAU,GACtBG,EAAUH,EAAAA,WAAU,GACpBI,EAAYJ,EAAAA,WAAU,GAEtBuB,EAAYjB,MAAOkB,EAAO,YAC9B,MAAMC,EAAgB,IAAK7B,KAAY4B,IACjCjB,SACJA,EAAAE,OACAA,EAAS,MAAAiB,OACTA,EACA3B,KAAM4B,EAAAC,QACNA,EAAAC,UACAA,EAAAd,UACAA,EAAAO,QACAA,GACEG,EAEJvB,EAAUS,OAAQ,EAClBR,EAAQQ,OAAQ,EAChBP,EAAUO,OAAQ,EAElB,IACE,MAAMD,EAAS,CACbD,SACAK,IAAKP,EACLmB,OAAmB,QAAXjB,EAAmBiB,OAAS,EACpC3B,KAAiB,QAAXU,EAAmBkB,GAAYD,OAAS,EAC9CE,WAIF,IAAIE,SADmBjC,EAAOgB,QAAQH,IAChBX,KAatB,OAXI8B,UAAaC,WAAQlB,YACvBkB,EAAOlB,SAAWiB,EAAUC,EAAOlB,WAGrCb,EAAKY,MAAQmB,EAAOlB,SACpBR,EAAUO,OAAQ,EAEdI,GACFA,EAAUe,GAGLA,CACb,OAAad,GACP,MAAMC,EACJD,aAAeE,EAAAA,YACXF,EACA,IAAIE,EAAAA,mBACFF,WAAKG,UAAW,4BAChB,OAAAC,EAAA,MAAAJ,OAAA,EAAAA,EAAKJ,eAAL,EAAAQ,EAAeC,QAUvB,MAPApB,EAAMU,MAAQM,EACdd,EAAQQ,OAAQ,EAEZW,GACFA,EAAQL,GAGJA,CACZ,CAAA,QACMf,EAAUS,OAAQ,CACxB,GAUE,OANAoB,EAAAA,SAASzB,WACiB,IAApBV,EAAQoC,eACJT,MAIH,CACLxB,OACAE,QACAC,YACAC,UACAC,YACA6B,MAAOV,EACPW,QAASX,EAEb"}