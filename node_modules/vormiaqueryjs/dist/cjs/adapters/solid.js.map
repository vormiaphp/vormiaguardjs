{"version":3,"file":"solid.js","sources":["../../../src/adapters/solid/createVormiaResource.js"],"sourcesContent":["import { createResource } from \"solid-js\";\nimport { getGlobalVormiaClient } from \"../../client/createVormiaClient\";\nimport { VormiaError } from \"../../client/utils/VormiaError\";\n\nexport function createVormiaResource(options) {\n  const client = getGlobalVormiaClient();\n  const {\n    endpoint,\n    method = \"GET\",\n    params,\n    data: bodyData,\n    headers,\n    transform,\n    ...resourceOptions\n  } = options;\n\n  const fetchData = async () => {\n    try {\n      const config = {\n        method,\n        params: method === \"GET\" ? params : undefined,\n        data: method !== \"GET\" ? bodyData || params : undefined,\n        headers,\n      };\n\n      const response = await client.request({\n        url: endpoint,\n        ...config,\n      });\n\n      let result = response.data;\n\n      if (transform) {\n        result = transform(result);\n      }\n\n      return result;\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : \"An unknown error occurred\";\n      const status = error?.response?.status;\n      const errorData = error?.response?.data;\n\n      throw new VormiaError(errorMessage, status, errorData);\n    }\n  };\n\n  const [resource] = createResource(\n    resourceOptions.autoFetch !== false ? fetchData : undefined,\n    resourceOptions\n  );\n\n  const enhancedRefetch = async (opts = {}) => {\n    const mergedOptions = { ...options, ...opts };\n    const response = await fetchData(mergedOptions);\n    return response;\n  };\n\n  return [resource, { ...resource.actions, refetch: enhancedRefetch }];\n}\n"],"names":["options","client","getGlobalVormiaClient","endpoint","method","params","data","bodyData","headers","transform","resourceOptions","fetchData","async","config","result","request","url","error","errorMessage","Error","message","status","_a","response","errorData","_b","VormiaError","resource","createResource","autoFetch","actions","refetch","opts"],"mappings":"kOAIO,SAA8BA,GACnC,MAAMC,EAASC,EAAAA,yBACTC,SACJA,EAAAC,OACAA,EAAS,MAAAC,OACTA,EACAC,KAAMC,EAAAC,QACNA,EAAAC,UACAA,KACGC,GACDV,EAEEW,EAAYC,kBAChB,IACE,MAAMC,EAAS,CACbT,SACAC,OAAmB,QAAXD,EAAmBC,OAAS,EACpCC,KAAiB,QAAXF,EAAmBG,GAAYF,OAAS,EAC9CG,WAQF,IAAIM,SALmBb,EAAOc,QAAQ,CACpCC,IAAKb,KACFU,KAGiBP,KAMtB,OAJIG,IACFK,EAASL,EAAUK,IAGdA,CACb,OAAaG,GACP,MAAMC,EACJD,aAAiBE,MAAQF,EAAMG,QAAU,4BACrCC,EAAS,OAAAC,EAAA,MAAAL,OAAA,EAAAA,EAAOM,eAAP,EAAAD,EAAiBD,OAC1BG,EAAY,OAAAC,EAAA,MAAAR,OAAA,EAAAA,EAAOM,eAAP,EAAAE,EAAiBnB,KAEnC,MAAM,IAAIoB,EAAAA,YAAYR,EAAcG,EAAQG,EAClD,IAGSG,GAAYC,EAAAA,gBACa,IAA9BlB,EAAgBmB,UAAsBlB,OAAY,EAClDD,GASF,MAAO,CAACiB,EAAU,IAAKA,EAASG,QAASC,QANjBnB,MAAOoB,EAAO,WAEbrB,KAK3B"}