{"version":3,"file":"qwik.mjs","sources":["../../../src/adapters/qwik/useVormia.js"],"sourcesContent":["import { useSignal, useTask$ } from \"@builder.io/qwik\";\nimport { getGlobalVormiaClient, VormiaError } from \"../../core/VormiaClient\";\n\nexport function useVormiaQuery(options) {\n  const client = getGlobalVormiaClient();\n  const data = useSignal(null);\n  const error = useSignal(null);\n  const isLoading = useSignal(false);\n  const isError = useSignal(false);\n  const isSuccess = useSignal(false);\n\n  const fetchData = async (opts = {}) => {\n    const mergedOptions = { ...options, ...opts };\n    const {\n      endpoint,\n      method = \"GET\",\n      params,\n      data: bodyData,\n      headers,\n      transform,\n      onSuccess,\n      onError,\n    } = mergedOptions;\n\n    isLoading.value = true;\n    isError.value = false;\n    isSuccess.value = false;\n\n    try {\n      const config = {\n        method,\n        url: endpoint,\n        params: method === \"GET\" ? params : undefined,\n        data: method !== \"GET\" ? bodyData || params : undefined,\n        headers,\n      };\n\n      const response = await client.request(config);\n      let result = response.data;\n\n      if (transform && result?.response) {\n        result.response = transform(result.response);\n      }\n\n      data.value = result.response;\n      isSuccess.value = true;\n\n      if (onSuccess) {\n        onSuccess(result);\n      }\n\n      return result;\n    } catch (err) {\n      const vormiaError =\n        err instanceof VormiaError\n          ? err\n          : new VormiaError(\n              err?.message || \"An unknown error occurred\",\n              err?.response?.status\n            );\n\n      error.value = vormiaError;\n      isError.value = true;\n\n      if (onError) {\n        onError(vormiaError);\n      }\n\n      throw vormiaError;\n    } finally {\n      isLoading.value = false;\n    }\n  };\n\n  // Auto-fetch if enabled\n  useTask$(async () => {\n    if (options.enabled !== false) {\n      await fetchData();\n    }\n  });\n\n  return {\n    data,\n    error,\n    isLoading,\n    isError,\n    isSuccess,\n    fetch: fetchData,\n    refetch: fetchData,\n  };\n}\n\nexport function useVormiaMutation(options = {}) {\n  const client = getGlobalVormiaClient();\n  const data = useSignal(null);\n  const error = useSignal(null);\n  const isLoading = useSignal(false);\n  const isError = useSignal(false);\n  const isSuccess = useSignal(false);\n\n  const mutate = async (endpoint, values, method = \"POST\", config = {}) => {\n    isLoading.value = true;\n    isError.value = false;\n    isSuccess.value = false;\n\n    try {\n      const response = await client.request({\n        method,\n        url: endpoint,\n        data: values,\n        ...config,\n      });\n\n      data.value = response.data;\n      isSuccess.value = true;\n\n      if (options.onSuccess) {\n        options.onSuccess(response.data);\n      }\n\n      return response.data;\n    } catch (err) {\n      const vormiaError =\n        err instanceof VormiaError\n          ? err\n          : new VormiaError(\n              err?.message || \"An unknown error occurred\",\n              err?.response?.status\n            );\n\n      error.value = vormiaError;\n      isError.value = true;\n\n      if (options.onError) {\n        options.onError(vormiaError);\n      }\n\n      throw vormiaError;\n    } finally {\n      isLoading.value = false;\n    }\n  };\n\n  return {\n    data,\n    error,\n    isLoading,\n    isError,\n    isSuccess,\n    mutate,\n  };\n}\n"],"names":[],"mappings":"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"}